var I=Object.defineProperty;var l=(t,n)=>I(t,"name",{value:n,configurable:!0});var P=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports);var h=(t,n,r)=>new Promise((a,o)=>{var i=e=>{try{m(r.next(e))}catch(c){o(c)}},s=e=>{try{m(r.throw(e))}catch(c){o(c)}},m=e=>e.done?a(e.value):Promise.resolve(e.value).then(i,s);m((r=r.apply(t,n)).next())});var p=P((x,d)=>{d.exports=t=>{function n(a){let o=new Image;return o.src=a,o.crossOrigin="anonymous",new Promise((i,s)=>{o.onload=()=>{i(o)},o.onerror=()=>{s(`failed to load ${a}`)}})}l(n,"loadImg");function r(a,o){let i=new Promise((s,m)=>{fetch(t.loadRoot()+o).then(e=>e.json()).then(e=>h(this,null,function*(){let c=yield Promise.all(e.frames.map(n)),g=document.createElement("canvas");g.width=e.width,g.height=e.height*e.frames.length;let f=g.getContext("2d");return c.forEach((u,w)=>{f.drawImage(u,0,w*e.height)}),t.loadSprite(a,g,{sliceY:e.frames.length,anims:e.anims})})).then(s).catch(m)});return t.addLoader(i),i}return l(r,"loadPedit"),{loadPedit:r}}});export default p();
//# sourceMappingURL=pedit.mjs.map
