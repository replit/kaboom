{"kaboom":{"kind":"FunctionDeclaration","name":"kaboom","parameters":[{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"KaboomConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"KaboomCtx"},"jsDoc":[{"kind":"JSDocComment","comment":"Initialize kaboom context. The starting point of all kaboom games.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// this will create a blank canvas and import all kaboom functions to global\nkaboom();\n\n// init with some configs (check out #KaboomConf for full config list)\n// create a game with custom dimension, but stretch to fit container, keeping aspect ratio, with a clear color\nkaboom({\n    width: 320,\n    height: 240,\n    stretch: true,\n    letterbox: true,\n    font: \"sinko\",\n    background: [ 0, 0, 255, ],\n});\n\n// all kaboom functions are imported to global automatically\nadd();\naction();\nkeyPress();\nvec2();\n\n// can also prevent kaboom from importing all functions to global and use a context handle\nconst k = kaboom({ global: false });\n\nk.add(...);\nk.action(...);\nk.keyPress(...);\nk.vec2(...);\n```"}]}]},"KaboomCtx":{"kind":"InterfaceDeclaration","name":"KaboomCtx","members":[{"kind":"MethodSignature","name":"add","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"comps","type":{"kind":"TypeReference","typeName":"CompList","typeArguments":[{"kind":"TypeReference","typeName":"T"}]}}],"type":{"kind":"TypeReference","typeName":"Character","typeArguments":[{"kind":"TypeReference","typeName":"T"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Create and add a game obj to the scene, from a list of components or tags. The added and returned game obj will contain all methods from each component.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Game Obj"},{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// let's add our player character to the screen\n// we use a list of components to define who they are and how they actually work\nconst player = add([\n    // it renders as a sprite\n    sprite(\"mark\"),\n    // it has a position\n    pos(100, 200),\n    // it has a collider\n    area(),\n    // it is a physical body which will respond to physics\n    body(),\n    // you can easily make custom components to encapsulate reusable logics\n    doubleJump(),\n    health(8),\n    // give it tags for controlling group behaviors\n    \"player\",\n    \"friendly\",\n    // plain objects fields are directly assigned to the game obj\n    {\n        dir: vec2(-1, 0),\n        dead: false,\n        speed: 240,\n    },\n]);\n\n// .jump is provided by body()\nplayer.jump();\n\n// .moveTo is provided by pos()\nplayer.moveTo(100, 200);\n\n// run something every frame\n// player will constantly move towards player.dir, at player.speed per second\nplayer.action(() => {\n    player.move(player.dir.scale(player.speed));\n});\n\n// .collides is provided by area()\nplayer.collides(\"tree\", () => {\n    destroy(player);\n});\n\n// run this for all game objs with tag \"friendly\"\naction(\"friendly\", (friend) => {\n    // .hurt is provided by health()\n    friend.hurt();\n});\n\n// check out #Character for stuff that exists for all game objects, independent of its components.\n```"}]}]},{"kind":"MethodSignature","name":"get","parameters":[{"kind":"Parameter","name":"tag","type":{"kind":"TypeReference","typeName":"Tag"},"questionToken":true}],"type":{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"Character"}},"jsDoc":[{"kind":"JSDocComment","comment":"Get a list of all game objs with certain tag.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// get a list of all game objs with tag \"bomb\"\nconst allBombs = get(\"bomb\");\n\n// without args returns all current objs in the game\nconst allObjs = get();\n```"}]}]},{"kind":"MethodSignature","name":"every","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"t","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"TypeReference","typeName":"T"}}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Run callback on every game obj with certain tag.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// how destroyAll() works\nevery(\"fruit\", destroy);\n\n// without tag it runs through every game obj\nevery((obj) => {});\n```"}]}]},{"kind":"MethodSignature","name":"every","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"TypeReference","typeName":"T"}}}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"revery","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"t","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"TypeReference","typeName":"T"}}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Run callback on every game obj with certain tag in reverse order."}]},{"kind":"MethodSignature","name":"revery","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"TypeReference","typeName":"T"}}}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"readd","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"TypeReference","typeName":"Character"},"jsDoc":[{"kind":"JSDocComment","comment":"Remove and re-add the game obj.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// mainly useful when you want to make something to draw on top\nreadd(froggy);\n```"}]}]},{"kind":"MethodSignature","name":"destroy","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Remove the game obj.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// every time froggy collides with anything with tag \"fruit\", remove it\nfroggy.collides(\"fruit\", (fruit) => {\n    destroy(fruit);\n});\n```"}]}]},{"kind":"MethodSignature","name":"destroyAll","parameters":[{"kind":"Parameter","name":"tag","type":{"kind":"TypeReference","typeName":"Tag"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Remove all game objs with certain tag.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// destroy all objects with tag \"bomb\" when you click one\nclicks(\"bomb\", () => {\n    destroyAll(\"bomb\");\n});\n```"}]}]},{"kind":"MethodSignature","name":"pos","parameters":[{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"PosComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Position","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Components"},{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// this game obj will draw the \"froggy\" sprite at (100, 200)\nadd([\n    pos(100, 200),\n    sprite(\"froggy\"),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"pos","parameters":[{"kind":"Parameter","name":"xy","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"PosComp"}},{"kind":"MethodSignature","name":"pos","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"PosComp"}},{"kind":"MethodSignature","name":"pos","parameters":[],"type":{"kind":"TypeReference","typeName":"PosComp"}},{"kind":"MethodSignature","name":"scale","parameters":[{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"ScaleComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Scale."}]},{"kind":"MethodSignature","name":"scale","parameters":[{"kind":"Parameter","name":"xy","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"ScaleComp"}},{"kind":"MethodSignature","name":"scale","parameters":[{"kind":"Parameter","name":"s","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"ScaleComp"}},{"kind":"MethodSignature","name":"scale","parameters":[],"type":{"kind":"TypeReference","typeName":"ScaleComp"}},{"kind":"MethodSignature","name":"rotate","parameters":[{"kind":"Parameter","name":"a","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"RotateComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Rotation (in degrees). (This doesn't work with the area() collider yet)"}]},{"kind":"MethodSignature","name":"color","parameters":[{"kind":"Parameter","name":"r","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"g","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"b","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"ColorComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Sets color (rgb 0-255).","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// blue frog\nadd([\n    sprite(\"froggy\"),\n    color(0, 0, 255)\n]);\n```"}]}]},{"kind":"MethodSignature","name":"color","parameters":[{"kind":"Parameter","name":"c","type":{"kind":"TypeReference","typeName":"Color"}}],"type":{"kind":"TypeReference","typeName":"ColorComp"}},{"kind":"MethodSignature","name":"color","parameters":[],"type":{"kind":"TypeReference","typeName":"ColorComp"}},{"kind":"MethodSignature","name":"opacity","parameters":[{"kind":"Parameter","name":"o","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"OpacityComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Sets opacity (0.0 - 1.0)."}]},{"kind":"MethodSignature","name":"sprite","parameters":[{"kind":"Parameter","name":"spr","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"SpriteData"}]}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"SpriteCompConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"SpriteComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Renders as sprite.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// minimal setup\nadd([\n    sprite(\"froggy\"),\n]);\n\n// with config\nconst froggy = add([\n    sprite(\"froggy\", {\n        // start with animation \"idle\"\n        anim: \"idle\",\n    }),\n]);\n\n// play / stop an anim\nfroggy.play(\"jump\");\nfroggy.stop();\n\n// manually setting a frame\nfroggy.frame = 3;\n```"}]}]},{"kind":"MethodSignature","name":"text","parameters":[{"kind":"Parameter","name":"txt","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"TextCompConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"TextComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Renders as text.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// a simple score counter\nconst score = add([\n    text(\"Score: 0\"),\n    pos(24, 24),\n    { value: 0 },\n]);\n\nplayer.collides(\"coin\", () => {\n    score.value += 1;\n    score.text = \"Score:\" + score.value;\n});\n\n// set to another default font on start up (\"sink\" is a pixel font provided by default)\nkaboom({ font: \"sink\" });\n```"}]}]},{"kind":"MethodSignature","name":"rect","parameters":[{"kind":"Parameter","name":"w","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"h","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"RectComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Renders as rect.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// i don't know, could be an obstacle or somethign\nadd([\n    rect(20, 40),\n    outline(4),\n    area(),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"area","parameters":[{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"AreaCompConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"AreaComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Collider. Will calculate from rendered comps (e.g. from sprite, text, rect) if no params given.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nadd([\n    sprite(\"froggy\"),\n    // without args it'll auto calculate from the data sprite comp provides\n    area(),\n]);\n\nadd([\n    sprite(\"bomb\"),\n    // scale to 0.6 of the sprite size\n    area({ scale: 0.6 }),\n    // we want the scale to be calculated from the center\n    origin(\"center\"),\n]);\n\n// define custom area with topleft and botright point\nconst player = add([\n    sprite(\"froggy\"),\n    area({ width: 20, height: 40. }),\n])\n\n// die if player collides with another game obj with tag \"tree\"\nplayer.collides(\"tree\", () => {\n    destroy(player);\n});\n\n// push player out of all other game obj with \"solid\" component\nplayer.action(() => {\n    player.pushOutAll();\n});\n\n// simple drag an drop\nlet draggin = false;\n\nplayer.clicks(() => {\n    draggin = true;\n});\n\nplayer.action(() => {\n    if (draggin) {\n        player.pos = mousePos();\n    }\n})\n\nmouseRelease(() => {\n    draggin = false;\n});\n\n// check for collision with another single game obj\nplayer.action(() => {\n    if (player.isColliding(bomb)) {\n        score += 1;\n    }\n});\n\n// for more methods check out AreaComp\n```"}]}]},{"kind":"MethodSignature","name":"origin","parameters":[{"kind":"Parameter","name":"o","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Origin"},{"kind":"TypeReference","typeName":"Vec2"}]}}],"type":{"kind":"TypeReference","typeName":"OriginComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Origin point for render (default \"topleft\").","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// set origin to \"center\" so it'll rotate from center\nadd([\n    rect(40, 10),\n    rotate(45),\n    origin(\"center\"),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"layer","parameters":[{"kind":"Parameter","name":"l","type":{"kind":"StringKeyword"}}],"type":{"kind":"TypeReference","typeName":"LayerComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Which layer this object belongs to."}]},{"kind":"MethodSignature","name":"z","parameters":[{"kind":"Parameter","name":"z","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"ZComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Determines the draw order for objects on the same layer. Object will be drawn on top if z value is bigger."}]},{"kind":"MethodSignature","name":"outline","parameters":[{"kind":"Parameter","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"Parameter","name":"color","type":{"kind":"TypeReference","typeName":"Color"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"OutlineComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Give obj an outline."}]},{"kind":"MethodSignature","name":"body","parameters":[{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"BodyCompConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"BodyComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Physical body that responds to gravity. Requires \"area\" and \"pos\" comp. This also makes the object \"solid\".","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// froggy jumpy\nconst froggy = add([\n    sprite(\"froggy\"),\n    // body() requires \"pos\" and \"area\" component\n    pos(),\n    area(),\n    body(),\n]);\n\n// when froggy is grounded, press space to jump\n// check out BodyComp for more methods\nkeyPress(\"space\", () => {\n    if (froggy.grounded()) {\n        froggy.jump();\n    }\n});\n\n// a custom event provided by \"body\"\nfroggy.on(\"ground\", () => {\n    debug.log(\"oh no!\");\n});\n```"}]}]},{"kind":"MethodSignature","name":"solid","parameters":[],"type":{"kind":"TypeReference","typeName":"SolidComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Make other objects cannot move pass. Requires \"area\" comp."}]},{"kind":"MethodSignature","name":"move","parameters":[{"kind":"Parameter","name":"direction","type":{"kind":"UnionType","types":[{"kind":"NumberKeyword"},{"kind":"TypeReference","typeName":"Vec2"}]}},{"kind":"Parameter","name":"speed","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"MoveComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Move towards a direction infinitely, and destroys when it leaves game view. Requires \"pos\" comp.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// enemy throwing feces at player\nconst projectile = add([\n    sprite(\"feces\"),\n    pos(player.pos),\n    area(),\n    move(player.pos.angle(enemy.pos), 1200),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"cleanup","parameters":[{"kind":"Parameter","name":"time","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"CleanupComp"},"jsDoc":[{"kind":"JSDocComment","comment":"destroy() the character if it's out of screen. Optionally specify the amount of time it has to be off-screen before removal.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// remove this 3 seconds after it leaves screen\nadd([\n    pos(80, 80),\n    move(LEFT, 120),\n    cleanup(3),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"follow","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Character"},{"kind":"LiteralType","literal":{"kind":"NullKeyword"}}]}},{"kind":"Parameter","name":"offset","type":{"kind":"TypeReference","typeName":"Vec2"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"FollowComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Follow another game obj's position."}]},{"kind":"MethodSignature","name":"shader","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"StringKeyword"}}],"type":{"kind":"TypeReference","typeName":"ShaderComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Custom shader."}]},{"kind":"MethodSignature","name":"timer","parameters":[{"kind":"Parameter","name":"n","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"Parameter","name":"action","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"TimerComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Run certain action after some time."}]},{"kind":"MethodSignature","name":"fixed","parameters":[],"type":{"kind":"TypeReference","typeName":"FixedComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Unaffected by camera.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// this score counter better be fixed on top left and not affected by camera\nconst score = add([\n    text(0),\n    pos(12, 12),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"stay","parameters":[],"type":{"kind":"TypeReference","typeName":"StayComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Don't get destroyed on scene switch.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nplayer.collides(\"bomb\", () => {\n    // spawn an explosion and switch scene, but don't destroy the explosion game obj on scene switch\n    add([\n        sprite(\"explosion\", { anim: \"burst\", }),\n        stay(),\n        lifespan(2),\n    ]);\n    go(\"lose\", score);\n});\n```"}]}]},{"kind":"MethodSignature","name":"health","parameters":[{"kind":"Parameter","name":"hp","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"HealthComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Handles health related logic and events.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nconst player = add([\n    health(3),\n]);\n\nplayer.collides(\"bad\", (bad) => {\n    player.hurt(1);\n    bad.hurt(1);\n});\n \nplayer.collides(\"apple\", () => {\n    player.heal(1);\n});\n\nplayer.on(\"hurt\", () => {\n    play(\"ouch\");\n});\n\n// triggers when hp reaches 0\nplayer.on(\"death\", () => {\n    destroy(player);\n    go(\"lose\");\n});\n```"}]}]},{"kind":"MethodSignature","name":"lifespan","parameters":[{"kind":"Parameter","name":"time","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"LifespanCompConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"LifespanComp"},"jsDoc":[{"kind":"JSDocComment","comment":"Destroy the game obj after certain amount of time","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// spawn an explosion, destroy after 2 seconds and the switch scene\nadd([\n    sprite(\"explosion\", { anim: \"burst\", }),\n    lifespan(2, () => go(\"lose\")),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"on","parameters":[{"kind":"Parameter","name":"event","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"tag","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}},{"kind":"Parameter","name":"args","dotDotDotToken":{"kind":"DotDotDotToken"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Register an event on all game objs with certain tag.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Events"},{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// a custom event defined by body() comp\n// every time an obj with tag \"bomb\" hits the floor, destroy it and addKaboom()\non(\"ground\", \"bomb\", (bomb) => {\n    destroy(bomb);\n    addKaboom();\n});\n```"}]}]},{"kind":"MethodSignature","name":"action","parameters":[{"kind":"Parameter","name":"tag","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Register \"update\" event (runs every frame) on all game objs with certain tag.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// move every \"tree\" 120 pixels per second to the left, destroy it when it leaves screen\n// there'll be nothing to run if there's no \"tree\" obj in the scene\naction(\"tree\", (tree) => {\n    tree.move(-120, 0);\n    if (tree.pos.x < 0) {\n        destroy(tree);\n    }\n});\n\n// without tags it just runs it every frame\naction(() => {\n    debug.log(\"ohhi\");\n});\n```"}]}]},{"kind":"MethodSignature","name":"action","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"}},{"kind":"MethodSignature","name":"render","parameters":[{"kind":"Parameter","name":"tag","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Register \"draw\" event (runs every frame) on all game objs with certain tag. (This is the same as `action()`, but all draw events are run after updates)"}]},{"kind":"MethodSignature","name":"render","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"}},{"kind":"MethodSignature","name":"collides","parameters":[{"kind":"Parameter","name":"t1","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"t2","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"a","type":{"kind":"TypeReference","typeName":"Character"}},{"kind":"Parameter","name":"b","type":{"kind":"TypeReference","typeName":"Character"}},{"kind":"Parameter","name":"side","type":{"kind":"TypeReference","typeName":"RectSide"},"questionToken":true}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Register event when 2 game objs with certain tags collides. This function spins off an action() when called, please put it at root level and never inside another action().","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\ncollides(\"sun\", \"earth\", () => {\n    addExplosion();\n});\n```"}]}]},{"kind":"MethodSignature","name":"clicks","parameters":[{"kind":"Parameter","name":"tag","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"a","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Register event when game objs with certain tags are clicked. This function spins off an action() when called, please put it at root level and never inside another action()."}]},{"kind":"MethodSignature","name":"hovers","parameters":[{"kind":"Parameter","name":"tag","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"a","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Register event when game objs with certain tags are hovered. This function spins off an action() when called, please put it at root level and never inside another action()."}]},{"kind":"MethodSignature","name":"mousePos","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get current mouse position (without camera transform).","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Input"}]}]},{"kind":"MethodSignature","name":"mouseWorldPos","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get current mouse position (after camera transform)"}]},{"kind":"MethodSignature","name":"mouseDeltaPos","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"How much mouse moved last frame."}]},{"kind":"MethodSignature","name":"keyDown","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Key"},{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"Key"}}]}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs every frame when a key is down.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// move left by SPEED pixels per frame every frame when \"left\" is being held down\nkeyDown(\"left\", () => {\n    froggy.move(-SPEED, 0);\n});\n```"}]}]},{"kind":"MethodSignature","name":"keyPress","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Key"},{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"Key"}}]}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs when user presses certain key.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// .jump() once when \"space\" is just being pressed\nkeyPress(\"space\", () => {\n    froggy.jump();\n});\n```"}]}]},{"kind":"MethodSignature","name":"keyPress","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"}},{"kind":"MethodSignature","name":"keyPressRep","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Key"},{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"Key"}}]}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs when user presses certain key (also fires repeatedly when they key is held).","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// delete last character when \"backspace\" is being pressed and held\nkeyPressRep(\"backspace\", () => {\n    input.text = input.text.substring(0, input.text.length - 1);\n});\n```"}]}]},{"kind":"MethodSignature","name":"keyPressRep","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"}},{"kind":"MethodSignature","name":"keyRelease","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Key"},{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"Key"}}]}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs when user releases certain key."}]},{"kind":"MethodSignature","name":"keyRelease","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"}},{"kind":"MethodSignature","name":"charInput","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"ch","type":{"kind":"StringKeyword"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs when user inputs text.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// export type into input\ncharInput((ch) => {\n    input.text += ch;\n});\n```"}]}]},{"kind":"MethodSignature","name":"mouseDown","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs every frame when mouse button is down."}]},{"kind":"MethodSignature","name":"mouseClick","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs when user clicks mouse."}]},{"kind":"MethodSignature","name":"mouseRelease","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs when user releases mouse."}]},{"kind":"MethodSignature","name":"mouseMove","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs whenever user move the mouse."}]},{"kind":"MethodSignature","name":"touchStart","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"TypeReference","typeName":"TouchID"}},{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs when a touch starts."}]},{"kind":"MethodSignature","name":"touchMove","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"TypeReference","typeName":"TouchID"}},{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs whenever touch moves."}]},{"kind":"MethodSignature","name":"touchEnd","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"TypeReference","typeName":"TouchID"}},{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event that runs when a touch ends."}]},{"kind":"MethodSignature","name":"keyIsDown","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"TypeReference","typeName":"Key"}}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If certain key is currently down.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// almost equivalent to the keyPress() example above\naction(() => {\n    if (keyIsDown(\"left\")) {\n        froggy.move(-SPEED, 0);\n    }\n});\n```"}]}]},{"kind":"MethodSignature","name":"keyIsPressed","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"TypeReference","typeName":"Key"},"questionToken":true}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If certain key is just pressed last frame."}]},{"kind":"MethodSignature","name":"keyIsPressedRep","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"TypeReference","typeName":"Key"},"questionToken":true}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If certain key is just pressed last frame (accepts help down repeatedly)."}]},{"kind":"MethodSignature","name":"keyIsReleased","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"TypeReference","typeName":"Key"},"questionToken":true}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If certain key is just released last frame."}]},{"kind":"MethodSignature","name":"mouseIsDown","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If certain mouse is currently down."}]},{"kind":"MethodSignature","name":"mouseIsClicked","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If mouse is just clicked last frame."}]},{"kind":"MethodSignature","name":"mouseIsReleased","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If mouse is just released last frame."}]},{"kind":"MethodSignature","name":"mouseIsMoved","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If mouse moved last frame."}]},{"kind":"MethodSignature","name":"loadRoot","parameters":[{"kind":"Parameter","name":"path","type":{"kind":"StringKeyword"},"questionToken":true}],"type":{"kind":"StringKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Sets the root for all subsequent resource urls.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Assets"},{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nloadRoot(\"https://myassets.com/\");\nloadSprite(\"froggy\", \"sprites/froggy.png\"); // will resolve to \"https://myassets.com/sprites/frogg.png\"\n```"}]}]},{"kind":"MethodSignature","name":"loadSprite","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"LiteralType","literal":{"kind":"NullKeyword"}}]}},{"kind":"Parameter","name":"src","type":{"kind":"TypeReference","typeName":"SpriteLoadSrc"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"SpriteLoadConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"SpriteData"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Load a sprite into asset manager, with name and resource url and optional config.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// due to browser policies you'll need a static file server to load local files\nloadSprite(\"froggy\", \"froggy.png\");\nloadSprite(\"apple\", \"https://kaboomjs.com/sprites/apple.png\");\n\n// slice a spritesheet and add anims manually\nloadSprite(\"froggy\", \"froggy.png\", {\n    sliceX: 4,\n    sliceY: 1,\n    anims: {\n        run: {\n            from: 0,\n            to: 3,\n        },\n        jump: {\n            from: 3,\n            to: 3,\n        },\n    },\n});\n```"}]}]},{"kind":"MethodSignature","name":"loadSpriteAtlas","parameters":[{"kind":"Parameter","name":"src","type":{"kind":"TypeReference","typeName":"SpriteLoadSrc"}},{"kind":"Parameter","name":"data","type":{"kind":"TypeReference","typeName":"SpriteAtlasData"}}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"Record","typeArguments":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"SpriteData"}]}]},"jsDoc":[{"kind":"JSDocComment","comment":"Load sprites from a sprite atlas.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nloadSpriteAtlas(\"sprites/dungeon.png\", {\n    \"hero\": {\n        x: 128,\n        y: 68,\n        width: 144,\n        height: 28,\n        sliceX: 9,\n        anims: {\n            idle: { from: 0, to: 3 },\n            run: { from: 4, to: 7 },\n            hit: { from: 8, to: 8 },\n        },\n    },\n});\n\nconst player = add([\n    sprite(\"hero\"),\n]);\n\nplayer.play(\"run\");\n\n// or load from json file, see SpriteAtlasData export type for format spec\nloadSpriteAtlas(\"sprites/dungeon.png\", \"sprites/dungeon.json\");\n```"}]}]},{"kind":"MethodSignature","name":"loadSpriteAtlas","parameters":[{"kind":"Parameter","name":"src","type":{"kind":"TypeReference","typeName":"SpriteLoadSrc"}},{"kind":"Parameter","name":"url","type":{"kind":"StringKeyword"}}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"Record","typeArguments":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"SpriteData"}]}]}},{"kind":"MethodSignature","name":"loadAseprite","parameters":[{"kind":"Parameter","name":"name","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"LiteralType","literal":{"kind":"NullKeyword"}}]}},{"kind":"Parameter","name":"imgSrc","type":{"kind":"TypeReference","typeName":"SpriteLoadSrc"}},{"kind":"Parameter","name":"jsonSrc","type":{"kind":"StringKeyword"}}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"SpriteData"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Load a sprite with aseprite spritesheet json.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nloadAseprite(\"car\", \"sprites/car.png\", \"sprites/car.json\");\n```"}]}]},{"kind":"MethodSignature","name":"loadPedit","parameters":[{"kind":"Parameter","name":"name","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"src","type":{"kind":"StringKeyword"}}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"SpriteData"}]}},{"kind":"MethodSignature","name":"loadBean","parameters":[{"kind":"Parameter","name":"name","type":{"kind":"StringKeyword"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"SpriteData"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Load default sprite \"bean\".","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nloadBean();\n\n// use it right away\nadd([\n    sprite(\"bean\"),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"loadSound","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"src","type":{"kind":"StringKeyword"}}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"SoundData"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Load a sound into asset manager, with name and resource url.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nloadSound(\"shoot\", \"horse.ogg\");\nloadSound(\"shoot\", \"https://kaboomjs.com/sounds/scream6.mp3\");\n```"}]}]},{"kind":"MethodSignature","name":"loadFont","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"src","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"gridWidth","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"gridHeight","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"FontLoadConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"FontData"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Load a bitmap font into asset manager, with name and resource url and infomation on the layout of the bitmap.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// load a bitmap font called \"04b03\", with bitmap \"fonts/04b03.png\"\n// each character on bitmap has a size of (6, 8), and contains default ASCII_CHARS\nloadFont(\"04b03\", \"fonts/04b03.png\", 6, 8);\n\n// load a font with custom characters\nloadFont(\"cp437\", \"cp437.png\", 6, 8, \"☺☻♥♦♣♠\");\n```"}]}]},{"kind":"MethodSignature","name":"loadShader","parameters":[{"kind":"Parameter","name":"name","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"vert","type":{"kind":"StringKeyword"},"questionToken":true},{"kind":"Parameter","name":"frag","type":{"kind":"StringKeyword"},"questionToken":true},{"kind":"Parameter","name":"isUrl","type":{"kind":"BooleanKeyword"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"ShaderData"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Load a shader into asset manager with vertex and fragment code / file url.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// load only a fragment shader from URL\nloadShader(\"outline\", null, \"/shaders/outline.glsl\", true);\n\n// default shaders and custom shader format\nloadShader(\"outline\",\n    `vec4 vert(vec3 pos, vec2 uv, vec4 color) {\n    // predefined functions to get the default value by kaboom\n    return def_vert();\n}`,\n`vec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n    // turn everything blue-ish\n    return def_frag() * vec4(0, 0, 1, 1);\n}`, true);\n```"}]}]},{"kind":"MethodSignature","name":"load","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"l","type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"TypeReference","typeName":"T"}]}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Add a new loader to wait for before starting the game.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nload(new Promise((resolve, reject) => {\n    // anything you want to do that stalls the game in loading state\n    resolve(\"ok\");\n}));\n```"}]}]},{"kind":"MethodSignature","name":"width","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the width of game.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Info"}]}]},{"kind":"MethodSignature","name":"height","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the height of game."}]},{"kind":"MethodSignature","name":"center","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the center point of view.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// add froggy to the center of the screen\nadd([\n    sprite(\"froggy\"),\n    pos(center()),\n    // ...\n]);\n```"}]}]},{"kind":"MethodSignature","name":"dt","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the delta time since last frame.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// rotate froggy 100 deg per second\nfroggy.action(() => {\n    froggy.angle += 100 * dt();\n});\n```"}]}]},{"kind":"MethodSignature","name":"time","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the total time since beginning."}]},{"kind":"MethodSignature","name":"screenshot","parameters":[],"type":{"kind":"StringKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Take a screenshot and get the dataurl of the image."}]},{"kind":"MethodSignature","name":"focused","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If the game canvas is currently focused."}]},{"kind":"MethodSignature","name":"focus","parameters":[],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Focus on the game canvas."}]},{"kind":"MethodSignature","name":"ready","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Run something when assets finished loading.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nconst froggy = add([\n    // ...\n]);\n\n// certain assets related data are only available when the game finishes loading\nready(() => {\n    debug.log(froggy.numFrames());\n});\n```"}]}]},{"kind":"MethodSignature","name":"isTouch","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Is currently on a touch screen device."}]},{"kind":"MethodSignature","name":"shake","parameters":[{"kind":"Parameter","name":"intensity","type":{"kind":"NumberKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Camera shake.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// shake intensively when froggy collides with a \"bomb\"\nfroggy.collides(\"bomb\", () => {\n    shake(120);\n});\n```"}]}]},{"kind":"MethodSignature","name":"camPos","parameters":[{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get / set camera position.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// camera follows player\nplayer.action(() => {\n    camPos(player.pos);\n});\n```"}]}]},{"kind":"MethodSignature","name":"camScale","parameters":[{"kind":"Parameter","name":"scale","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get / set camera scale."}]},{"kind":"MethodSignature","name":"camRot","parameters":[{"kind":"Parameter","name":"angle","type":{"kind":"NumberKeyword"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get / set camera rotation."}]},{"kind":"MethodSignature","name":"toScreen","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Transform a point from world position to screen position."}]},{"kind":"MethodSignature","name":"toWorld","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Transform a point from screen position to world position."}]},{"kind":"MethodSignature","name":"gravity","parameters":[{"kind":"Parameter","name":"g","type":{"kind":"NumberKeyword"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get / set gravity."}]},{"kind":"MethodSignature","name":"layers","parameters":[{"kind":"Parameter","name":"list","type":{"kind":"ArrayType","elementType":{"kind":"StringKeyword"}}},{"kind":"Parameter","name":"def","type":{"kind":"StringKeyword"},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Define layers (the last one will be on top).","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// defining 3 layers, \"ui\" will be drawn on top most, with default layer being \"game\"\nlayers([\n    \"bg\",\n    \"game\",\n    \"ui\",\n], \"game\");\n\n// use layer() comp to define which layer an obj belongs to\nadd([\n    text(score),\n    layer(\"ui\"),\n    fixed(),\n]);\n\n// without layer() comp it'll fall back to default layer, which is \"game\"\nadd([\n    sprite(\"froggy\"),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"loop","parameters":[{"kind":"Parameter","name":"t","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Run the callback every n seconds.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// spawn a bomb at random position every frame\nloop(1, () => {\n    add([\n        sprite(\"bomb\"),\n        pos(rand(0, width()), rand(0, height())),\n        area(),\n        body(),\n    ]);\n});\n```"}]}]},{"kind":"MethodSignature","name":"wait","parameters":[{"kind":"Parameter","name":"n","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"Promise","typeArguments":[{"kind":"VoidKeyword"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Run the callback after n seconds."}]},{"kind":"MethodSignature","name":"cursor","parameters":[{"kind":"Parameter","name":"c","type":{"kind":"TypeReference","typeName":"Cursor"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"Cursor"},"jsDoc":[{"kind":"JSDocComment","comment":"Get / set the cursor (css). Cursor will be reset to \"default\" every frame so use this in an per-frame action.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nhovers(\"clickable\", (c) => {\n    cursor(\"pointer\");\n});\n```"}]}]},{"kind":"MethodSignature","name":"regCursor","parameters":[{"kind":"Parameter","name":"c","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"draw","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"ParenthesizedType","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"mpos","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}}}]}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Load a cursor from a sprite, or custom drawing function.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\nloadSprite(\"froggy\", \"sprites/froggy.png\");\n\n// use sprite as cursor\nregCursor(\"default\", \"froggy\");\nregCursor(\"pointer\", \"apple\");\n```"}]}]},{"kind":"MethodSignature","name":"fullscreen","parameters":[{"kind":"Parameter","name":"f","type":{"kind":"BooleanKeyword"},"questionToken":true}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Enter / exit fullscreen mode.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// toggle fullscreen mode on \"f\"\nkeyPress(\"f\", (c) => {\n    fullscreen(!fullscreen());\n});\n```"}]}]},{"kind":"MethodSignature","name":"play","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"AudioPlayConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"AudioPlay"},"jsDoc":[{"kind":"JSDocComment","comment":"Play a piece of audio, returns a handle to control.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Audio"},{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// play a one off sound\nplay(\"wooosh\");\n\n// play a looping soundtrack (check out AudioPlayConf for more configs)\nconst music = play(\"OverworldlyFoe\", {\n    volume: 0.8,\n    loop: true\n});\n\n// using the handle to control (check out AudioPlay for more controls / info)\nmusic.pause();\nmusic.play();\n```"}]}]},{"kind":"MethodSignature","name":"burp","parameters":[{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"AudioPlayConf"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"AudioPlay"},"jsDoc":[{"kind":"JSDocComment","comment":"Yep."}]},{"kind":"MethodSignature","name":"volume","parameters":[{"kind":"Parameter","name":"v","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Sets global volume.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// makes everything quieter\nvolume(0.5);\n```"}]}]},{"kind":"PropertySignature","name":"audioCtx","type":{"kind":"TypeReference","typeName":"AudioContext"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the underlying browser AudioContext."}]},{"kind":"MethodSignature","name":"rand","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get a random number (with optional bounds).","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Math"},{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// a random number between 0 - 1\nrand();\n\n// a random number between 0 - 8\nrand(8);\n\n// a random number between 50 - 100\nrand(50, 100);\n\n// a random vec2 between vec2(0) and vec2(100)\nrand(vec2(0), vec2(100));\n\n// spawn something on the right side of the screen but with random y value within screen height\nadd([\n    pos(width(), rand(0, height())),\n]);\n```"}]}]},{"kind":"MethodSignature","name":"rand","typeParameters":[{"kind":"TypeParameter","name":"T","constraint":{"kind":"TypeReference","typeName":"RNGValue"}}],"parameters":[{"kind":"Parameter","name":"n","type":{"kind":"TypeReference","typeName":"T"}}],"type":{"kind":"TypeReference","typeName":"T"}},{"kind":"MethodSignature","name":"rand","typeParameters":[{"kind":"TypeParameter","name":"T","constraint":{"kind":"TypeReference","typeName":"RNGValue"}}],"parameters":[{"kind":"Parameter","name":"a","type":{"kind":"TypeReference","typeName":"T"}},{"kind":"Parameter","name":"b","type":{"kind":"TypeReference","typeName":"T"}}],"type":{"kind":"TypeReference","typeName":"T"}},{"kind":"MethodSignature","name":"randi","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"rand() but integer only."}]},{"kind":"MethodSignature","name":"randi","typeParameters":[{"kind":"TypeParameter","name":"T","constraint":{"kind":"TypeReference","typeName":"RNGValue"}}],"parameters":[{"kind":"Parameter","name":"n","type":{"kind":"TypeReference","typeName":"T"}}],"type":{"kind":"TypeReference","typeName":"T"}},{"kind":"MethodSignature","name":"randi","typeParameters":[{"kind":"TypeParameter","name":"T","constraint":{"kind":"TypeReference","typeName":"RNGValue"}}],"parameters":[{"kind":"Parameter","name":"a","type":{"kind":"TypeReference","typeName":"T"}},{"kind":"Parameter","name":"b","type":{"kind":"TypeReference","typeName":"T"}}],"type":{"kind":"TypeReference","typeName":"T"}},{"kind":"MethodSignature","name":"randSeed","parameters":[{"kind":"Parameter","name":"seed","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get / set the random number generator seed."}]},{"kind":"MethodSignature","name":"vec2","parameters":[{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Make a 2d vector.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// { x: 0, y: 0 }\nvec2();\n\n// { x: 10, y: 10 }\nvec2(10);\n\n// { x: 100, y: 80 }\nconst pos = vec2(100, 80);\n\n// move to 150 degrees direction with by length 10\npos = pos.add(dir(150).scale(10));\n```"}]}]},{"kind":"MethodSignature","name":"vec2","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"vec2","parameters":[{"kind":"Parameter","name":"xy","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"vec2","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"rgb","parameters":[{"kind":"Parameter","name":"r","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"g","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"b","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Color"},"jsDoc":[{"kind":"JSDocComment","comment":"RGB color (0 - 255)."}]},{"kind":"MethodSignature","name":"quad","parameters":[{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"w","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"h","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Quad"},"jsDoc":[{"kind":"JSDocComment","comment":"Rectangle area (0.0 - 1.0)."}]},{"kind":"MethodSignature","name":"choose","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"lst","type":{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"T"}}}],"type":{"kind":"TypeReference","typeName":"T"},"jsDoc":[{"kind":"JSDocComment","comment":"Choose a random item from a list.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// decide the best fruit randomly\nconst bestFruit = choose([\"apple\", \"banana\", \"pear\", \"watermelon\"]);\n```"}]}]},{"kind":"MethodSignature","name":"chance","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"NumberKeyword"}}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"rand(1) <= p","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// every frame all objs with tag \"unlucky\" have 50% chance die\naction(\"unlucky\", (o) => {\n    if (chance(0.5)) {\n        destroy(o);\n    }\n});\n```"}]}]},{"kind":"MethodSignature","name":"lerp","parameters":[{"kind":"Parameter","name":"from","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"to","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"t","type":{"kind":"NumberKeyword"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Linear interpolation."}]},{"kind":"MethodSignature","name":"map","parameters":[{"kind":"Parameter","name":"v","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"l1","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"h1","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"l2","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"h2","type":{"kind":"NumberKeyword"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Map a value from one range to another range."}]},{"kind":"MethodSignature","name":"mapc","parameters":[{"kind":"Parameter","name":"v","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"l1","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"h1","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"l2","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"h2","type":{"kind":"NumberKeyword"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Map a value from one range to another range, and clamp to the dest range."}]},{"kind":"MethodSignature","name":"dir","parameters":[{"kind":"Parameter","name":"deg","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get directional vector from an angle","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// move towards 80 deg direction at SPEED\nplayer.action(() => {\n    player.move(dir(80).scale(SPEED));\n});\n```"}]}]},{"kind":"MethodSignature","name":"wave","parameters":[{"kind":"Parameter","name":"lo","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"hi","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"t","type":{"kind":"NumberKeyword"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Sin() motion between 2 values.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// change color with sin() like motion\naction(\"colorful\", (c) => {\n    c.color.r = wave(0, 255, time());\n    c.color.g = wave(0, 255, time() + 1);\n    c.color.b = wave(0, 255, time() + 2);\n});\n```"}]}]},{"kind":"MethodSignature","name":"deg2rad","parameters":[{"kind":"Parameter","name":"deg","type":{"kind":"NumberKeyword"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Convert degrees to radians."}]},{"kind":"MethodSignature","name":"rad2deg","parameters":[{"kind":"Parameter","name":"rad","type":{"kind":"NumberKeyword"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Convert radians to degrees."}]},{"kind":"MethodSignature","name":"rng","parameters":[{"kind":"Parameter","name":"seed","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"RNG"},"jsDoc":[{"kind":"JSDocComment","comment":"Make a new random number generator."}]},{"kind":"MethodSignature","name":"colLineLine","parameters":[{"kind":"Parameter","name":"l1","type":{"kind":"TypeReference","typeName":"Line"}},{"kind":"Parameter","name":"l2","type":{"kind":"TypeReference","typeName":"Line"}}],"type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Vec2"},{"kind":"LiteralType","literal":{"kind":"NullKeyword"}}]}},{"kind":"MethodSignature","name":"colRectRect","parameters":[{"kind":"Parameter","name":"r1","type":{"kind":"TypeReference","typeName":"Rect"}},{"kind":"Parameter","name":"r2","type":{"kind":"TypeReference","typeName":"Rect"}}],"type":{"kind":"BooleanKeyword"}},{"kind":"MethodSignature","name":"scene","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"TypeReference","typeName":"SceneID"}},{"kind":"Parameter","name":"def","type":{"kind":"TypeReference","typeName":"SceneDef"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Define a scene.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Scene"}]}]},{"kind":"MethodSignature","name":"go","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"TypeReference","typeName":"SceneID"}},{"kind":"Parameter","name":"args","type":{"kind":"ArrayType","elementType":{"kind":"AnyKeyword"}},"dotDotDotToken":{"kind":"DotDotDotToken"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Go to a scene, passing all rest args to scene callback."}]},{"kind":"MethodSignature","name":"addLevel","parameters":[{"kind":"Parameter","name":"map","type":{"kind":"ArrayType","elementType":{"kind":"StringKeyword"}}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"LevelConf"}}],"type":{"kind":"TypeReference","typeName":"Level"},"jsDoc":[{"kind":"JSDocComment","comment":"Construct a level based on symbols.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Level"},{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// example from demo/platformer.js\naddLevel([\n    \"                          $\",\n    \"                          $\",\n    \"                          $\",\n    \"           $$         =   $\",\n    \"  %      ====         =   $\",\n    \"                      =   $\",\n    \"                      =    \",\n    \"       ^^      = >    =    \",\n    \"===========================\",\n], {\n    // define the size of each block\n    width: 32,\n    height: 32,\n    // define what each symbol means, by a function returning a comp list (what you'll pass to add())\n    \"=\": () => [\n        sprite(\"floor\"),\n        area(),\n        solid(),\n    ],\n    \"$\": () => [\n        sprite(\"coin\"),\n        area(),\n        pos(0, -9),\n    ],\n    \"^\": () => [\n        sprite(\"spike\"),\n        area(),\n        \"danger\",\n    ],\n});\n```"}]}]},{"kind":"MethodSignature","name":"getData","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"key","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"def","type":{"kind":"TypeReference","typeName":"T"},"questionToken":true}],"type":{"kind":"TypeReference","typeName":"T"},"jsDoc":[{"kind":"JSDocComment","comment":"Get data from local storage, if not present can set to a default value.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Data"}]}]},{"kind":"MethodSignature","name":"setData","parameters":[{"kind":"Parameter","name":"key","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"data","type":{"kind":"AnyKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Set data from local storage."}]},{"kind":"MethodSignature","name":"drawSprite","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"SpriteData"}]}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"DrawSpriteConf"},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Draw a sprite.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Render"}]}]},{"kind":"MethodSignature","name":"drawText","parameters":[{"kind":"Parameter","name":"txt","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeLiteral","members":[]},"questionToken":true}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"drawRect","parameters":[{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"w","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"h","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"DrawRectConf"},"questionToken":true}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"drawRectStroke","parameters":[{"kind":"Parameter","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"w","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"h","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"DrawRectStrokeConf"},"questionToken":true}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"drawLine","parameters":[{"kind":"Parameter","name":"p1","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"p2","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"DrawLineConf"},"questionToken":true}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"drawTri","parameters":[{"kind":"Parameter","name":"p1","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"p2","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"p3","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"DrawTriConf"},"questionToken":true}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"plug","typeParameters":[{"kind":"TypeParameter","name":"T"}],"parameters":[{"kind":"Parameter","name":"plugin","type":{"kind":"TypeReference","typeName":"KaboomPlugin","typeArguments":[{"kind":"TypeReference","typeName":"T"}]}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Import a plugin."}]},{"kind":"PropertySignature","name":"debug","type":{"kind":"TypeReference","typeName":"Debug"},"jsDoc":[{"kind":"JSDocComment","comment":"Debug stuff.","tags":[{"kind":"FirstJSDocTagNode","tagName":"section","comment":"Misc"},{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// pause the whole game\ndebug.paused = true;\n\n// enter inspect mode\ndebug.inspect = true;\n\n// in debug mode (on by default, unless disabled by `debug: false` in KaboomConf), some keys are binded to toggle certain debug features:\n// F1: toggle debug.inspect\n// F2: call debug.clearLog()\n// F8: toggle debug.pause\n// F7: decrease debug.timeScale\n// F9: increase debug.timeScale\n// F10: call debug.stepFrame()\n```"}]}]},{"kind":"PropertySignature","name":"ASCII_CHARS","type":{"kind":"StringKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"All chars in ASCII."}]},{"kind":"PropertySignature","name":"CP437_CHARS","type":{"kind":"StringKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"All chars in CP437."}]},{"kind":"PropertySignature","name":"LEFT","type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Left directional vector vec2(-1, 0)."}]},{"kind":"PropertySignature","name":"RIGHT","type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Right directional vector vec2(1, 0)."}]},{"kind":"PropertySignature","name":"UP","type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Up directional vector vec2(0, -1)."}]},{"kind":"PropertySignature","name":"DOWN","type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Down directional vector vec2(0, 1)."}]},{"kind":"PropertySignature","name":"canvas","type":{"kind":"TypeReference","typeName":"HTMLCanvasElement"},"jsDoc":[{"kind":"JSDocComment","comment":"The canvas DOM kaboom is currently using."}]},{"kind":"IndexSignature","parameters":[{"kind":"Parameter","name":"custom","type":{"kind":"StringKeyword"}}],"type":{"kind":"AnyKeyword"}}],"jsDoc":[{"kind":"JSDocComment","comment":"Context handle that contains every kaboom function."}]},"Tag":{"kind":"TypeAliasDeclaration","name":"Tag","type":{"kind":"StringKeyword"}},"CompList":{"kind":"TypeAliasDeclaration","name":"CompList","typeParameters":[{"kind":"TypeParameter","name":"T"}],"type":{"kind":"TypeReference","typeName":"Array","typeArguments":[{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"T"},{"kind":"TypeReference","typeName":"Tag"}]}]}},"Key":{"kind":"TypeAliasDeclaration","name":"Key","type":{"kind":"UnionType","types":[{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f1","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f2","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f3","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f4","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f5","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f6","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f7","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f8","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f9","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f10","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f11","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f12","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"`","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"1","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"2","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"3","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"4","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"5","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"6","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"7","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"8","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"9","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"0","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"-","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"=","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"q","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"w","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"e","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"r","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"t","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"y","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"u","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"i","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"o","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"p","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"[","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"]","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"\\","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"a","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"s","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"d","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"f","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"g","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"h","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"j","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"k","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"l","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":";","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"'","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"z","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"x","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"c","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"v","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"b","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"n","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"m","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":",","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":".","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"/","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"backspace","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"enter","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"tab","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"space","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":" ","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"left","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"right","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"up","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"down","hasExtendedUnicodeEscape":false}}]}},"CharacterInspect":{"kind":"TypeAliasDeclaration","name":"CharacterInspect","type":{"kind":"TypeReference","typeName":"Record","typeArguments":[{"kind":"TypeReference","typeName":"Tag"},{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"LiteralType","literal":{"kind":"NullKeyword"}}]}]},"jsDoc":[{"kind":"JSDocComment","comment":"Inspect info for a character."}]},"KaboomConf":{"kind":"InterfaceDeclaration","name":"KaboomConf","members":[{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Width of game."}]},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Height of game."}]},{"kind":"PropertySignature","name":"scale","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Pixel scale / size."}]},{"kind":"PropertySignature","name":"stretch","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If stretch canvas to container when width and height is specified"}]},{"kind":"PropertySignature","name":"letterbox","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"When stretching if keep aspect ratio and leave black bars on remaining spaces."}]},{"kind":"PropertySignature","name":"debug","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If register debug buttons (default true)"}]},{"kind":"PropertySignature","name":"font","type":{"kind":"StringKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Default font (defaults to \"apl386o\", with \"apl386\", \"sink\", \"sinko\" as other built-in options)."}]},{"kind":"PropertySignature","name":"crisp","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Disable antialias and enable sharp pixel display."}]},{"kind":"PropertySignature","name":"canvas","type":{"kind":"TypeReference","typeName":"HTMLCanvasElement"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"The canvas DOM element to use. If empty will create one."}]},{"kind":"PropertySignature","name":"root","type":{"kind":"TypeReference","typeName":"HTMLElement"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"The container DOM element to insert the canvas if created. Defaults to document.body."}]},{"kind":"PropertySignature","name":"background","type":{"kind":"ArrayType","elementType":{"kind":"NumberKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Background color. E.g. [ 0, 0, 255 ] for solid blue background."}]},{"kind":"PropertySignature","name":"inspectColor","type":{"kind":"ArrayType","elementType":{"kind":"NumberKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"The color to draw collider boxes etc."}]},{"kind":"PropertySignature","name":"texFilter","type":{"kind":"TypeReference","typeName":"TexFilter"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Default texture filter."}]},{"kind":"PropertySignature","name":"logMax","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"How many log messages can there be on one screen."}]},{"kind":"PropertySignature","name":"touchToMouse","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If translate touch events as mouse clicks (default true)."}]},{"kind":"PropertySignature","name":"global","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If import all kaboom functions to global (default true)."}]},{"kind":"PropertySignature","name":"plugins","type":{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"KaboomPlugin","typeArguments":[{"kind":"AnyKeyword"}]}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"List of plugins to import."}]}],"jsDoc":[{"kind":"JSDocComment","comment":"Kaboom configurations."}]},"KaboomPlugin":{"kind":"TypeAliasDeclaration","name":"KaboomPlugin","typeParameters":[{"kind":"TypeParameter","name":"T"}],"type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"k","type":{"kind":"TypeReference","typeName":"KaboomCtx"}}],"type":{"kind":"TypeReference","typeName":"T"}}},"Character":{"kind":"TypeAliasDeclaration","name":"Character","typeParameters":[{"kind":"TypeParameter","name":"T","default":{"kind":"AnyKeyword"}}],"type":{"kind":"IntersectionType","types":[{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"_id","type":{"kind":"UnionType","types":[{"kind":"NumberKeyword"},{"kind":"LiteralType","literal":{"kind":"NullKeyword"}}]},"jsDoc":[{"kind":"JSDocComment","comment":"Internal Character ID."}]},{"kind":"PropertySignature","name":"hidden","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If draw the game obj (run \"draw\" event or not)."}]},{"kind":"PropertySignature","name":"paused","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If update the game obj (run \"update\" event or not)."}]},{"kind":"MethodSignature","name":"exists","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If game obj exists in scene."}]},{"kind":"MethodSignature","name":"is","parameters":[{"kind":"Parameter","name":"tag","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Tag"},{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"Tag"}}]}}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If there a certain tag on the game obj."}]},{"kind":"MethodSignature","name":"use","parameters":[{"kind":"Parameter","name":"comp","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Comp"},{"kind":"TypeReference","typeName":"Tag"}]}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Add a component or tag."}]},{"kind":"MethodSignature","name":"unuse","parameters":[{"kind":"Parameter","name":"comp","type":{"kind":"TypeReference","typeName":"Tag"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Remove a tag or a component with its id."}]},{"kind":"MethodSignature","name":"action","parameters":[{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Run something every frame for this game obj (sugar for on(\"update\"))."}]},{"kind":"MethodSignature","name":"on","parameters":[{"kind":"Parameter","name":"ev","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event."}]},{"kind":"MethodSignature","name":"trigger","parameters":[{"kind":"Parameter","name":"ev","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"args","type":{"kind":"ArrayType","elementType":{"kind":"AnyKeyword"}},"dotDotDotToken":{"kind":"DotDotDotToken"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Triggers an event."}]},{"kind":"MethodSignature","name":"destroy","parameters":[],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Remove the game obj from scene."}]},{"kind":"MethodSignature","name":"c","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"TypeReference","typeName":"Tag"}}],"type":{"kind":"TypeReference","typeName":"Comp"},"jsDoc":[{"kind":"JSDocComment","comment":"Get state for a specific comp."}]},{"kind":"MethodSignature","name":"inspect","parameters":[],"type":{"kind":"TypeReference","typeName":"CharacterInspect"},"jsDoc":[{"kind":"JSDocComment","comment":"Gather debug info of all comps."}]}]},{"kind":"TypeReference","typeName":"MergeComps","typeArguments":[{"kind":"TypeReference","typeName":"T"}]}]},"jsDoc":[{"kind":"JSDocComment","comment":"A character in game. The basic unit of object in Kaboom. The player, a bullet, a tree, a piece of text, they're all characters!"}]},"SceneID":{"kind":"TypeAliasDeclaration","name":"SceneID","type":{"kind":"StringKeyword"}},"SceneDef":{"kind":"TypeAliasDeclaration","name":"SceneDef","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"args","type":{"kind":"ArrayType","elementType":{"kind":"AnyKeyword"}},"dotDotDotToken":{"kind":"DotDotDotToken"}}],"type":{"kind":"VoidKeyword"}}},"TouchID":{"kind":"TypeAliasDeclaration","name":"TouchID","type":{"kind":"NumberKeyword"}},"EventCanceller":{"kind":"TypeAliasDeclaration","name":"EventCanceller","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"jsDoc":[{"kind":"JSDocComment","comment":"Cancel the event."}]},"SpriteAnim":{"kind":"TypeAliasDeclaration","name":"SpriteAnim","type":{"kind":"UnionType","types":[{"kind":"NumberKeyword"},{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"from","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"The starting frame."}]},{"kind":"PropertySignature","name":"to","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"The end frame."}]},{"kind":"PropertySignature","name":"loop","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If this anim should be played in loop."}]},{"kind":"PropertySignature","name":"pingpong","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"When looping should it move back instead of go to start frame again."}]},{"kind":"PropertySignature","name":"speed","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"This anim's speed in frames per second."}]}]}]},"jsDoc":[{"kind":"JSDocComment","comment":"Frame-based animation configuration."}]},"SpriteAnimPlayConf":{"kind":"InterfaceDeclaration","name":"SpriteAnimPlayConf","members":[{"kind":"PropertySignature","name":"loop","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If this anim should be played in loop."}]},{"kind":"PropertySignature","name":"pingpong","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"When looping should it move back instead of go to start frame again."}]},{"kind":"PropertySignature","name":"speed","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"This anim's speed in frames per second."}]},{"kind":"PropertySignature","name":"onEnd","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Runs when this animation ends."}]}],"jsDoc":[{"kind":"JSDocComment","comment":"Sprite animation configuration when playing."}]},"SpriteAnims":{"kind":"TypeAliasDeclaration","name":"SpriteAnims","type":{"kind":"TypeReference","typeName":"Record","typeArguments":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"SpriteAnim"}]},"jsDoc":[{"kind":"JSDocComment","comment":"A dict of name <-> animation."}]},"SpriteLoadConf":{"kind":"InterfaceDeclaration","name":"SpriteLoadConf","members":[{"kind":"PropertySignature","name":"sliceX","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"sliceY","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"anims","type":{"kind":"TypeReference","typeName":"SpriteAnims"},"questionToken":true},{"kind":"PropertySignature","name":"filter","type":{"kind":"TypeReference","typeName":"TexFilter"},"questionToken":true},{"kind":"PropertySignature","name":"wrap","type":{"kind":"TypeReference","typeName":"TexWrap"},"questionToken":true}],"jsDoc":[{"kind":"JSDocComment","comment":"Sprite loading configuration."}]},"SpriteAtlasData":{"kind":"TypeAliasDeclaration","name":"SpriteAtlasData","type":{"kind":"TypeReference","typeName":"Record","typeArguments":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"SpriteAtlasEntry"}]}},"SpriteAtlasEntry":{"kind":"InterfaceDeclaration","name":"SpriteAtlasEntry","members":[{"kind":"PropertySignature","name":"x","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"X position of the top left corner."}]},{"kind":"PropertySignature","name":"y","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Y position of the top left corner."}]},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Sprite area width."}]},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Sprite area height."}]},{"kind":"PropertySignature","name":"sliceX","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If the defined area contains multiple sprites, how many frames are in the area hozizontally."}]},{"kind":"PropertySignature","name":"sliceY","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If the defined area contains multiple sprites, how many frames are in the area vertically."}]},{"kind":"PropertySignature","name":"anims","type":{"kind":"TypeReference","typeName":"SpriteAnims"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Animation configuration."}]}],"jsDoc":[{"kind":"JSDocComment","comment":"A sprite in a sprite atlas."}]},"SpriteLoadSrc":{"kind":"TypeAliasDeclaration","name":"SpriteLoadSrc","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"GfxTexData"}]}},"SpriteData":{"kind":"InterfaceDeclaration","name":"SpriteData","members":[{"kind":"PropertySignature","name":"tex","type":{"kind":"TypeReference","typeName":"GfxTexture"}},{"kind":"PropertySignature","name":"frames","type":{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"Quad"}}},{"kind":"PropertySignature","name":"anims","type":{"kind":"TypeReference","typeName":"SpriteAnims"}},{"kind":"PropertySignature","name":"filter","type":{"kind":"TypeReference","typeName":"TexFilter"},"questionToken":true},{"kind":"PropertySignature","name":"wrap","type":{"kind":"TypeReference","typeName":"TexWrap"},"questionToken":true}]},"FontLoadConf":{"kind":"InterfaceDeclaration","name":"FontLoadConf","members":[{"kind":"PropertySignature","name":"chars","type":{"kind":"StringKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"filter","type":{"kind":"TypeReference","typeName":"TexFilter"},"questionToken":true},{"kind":"PropertySignature","name":"wrap","type":{"kind":"TypeReference","typeName":"TexWrap"},"questionToken":true}]},"SoundData":{"kind":"InterfaceDeclaration","name":"SoundData","members":[{"kind":"PropertySignature","name":"buf","type":{"kind":"TypeReference","typeName":"AudioBuffer"}}]},"FontData":{"kind":"TypeAliasDeclaration","name":"FontData","type":{"kind":"TypeReference","typeName":"GfxFont"}},"ShaderData":{"kind":"TypeAliasDeclaration","name":"ShaderData","type":{"kind":"TypeReference","typeName":"GfxProgram"}},"AudioPlayConf":{"kind":"InterfaceDeclaration","name":"AudioPlayConf","members":[{"kind":"PropertySignature","name":"loop","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"volume","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"speed","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"detune","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"seek","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"The start time, in seconds."}]}],"jsDoc":[{"kind":"JSDocComment","comment":"Audio play configurations."}]},"AudioPlay":{"kind":"InterfaceDeclaration","name":"AudioPlay","members":[{"kind":"MethodSignature","name":"play","parameters":[{"kind":"Parameter","name":"seek","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"stop","parameters":[],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"pause","parameters":[],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"paused","parameters":[],"type":{"kind":"BooleanKeyword"}},{"kind":"MethodSignature","name":"stopped","parameters":[],"type":{"kind":"BooleanKeyword"}},{"kind":"MethodSignature","name":"speed","parameters":[{"kind":"Parameter","name":"s","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"detune","parameters":[{"kind":"Parameter","name":"d","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"volume","parameters":[{"kind":"Parameter","name":"v","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"time","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"The current playing time."}]},{"kind":"MethodSignature","name":"duration","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"The total duration."}]},{"kind":"MethodSignature","name":"loop","parameters":[],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"unloop","parameters":[],"type":{"kind":"VoidKeyword"}}]},"GfxProgram":{"kind":"InterfaceDeclaration","name":"GfxProgram","members":[{"kind":"MethodSignature","name":"bind","parameters":[],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"unbind","parameters":[],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"bindAttribs","parameters":[],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"send","parameters":[{"kind":"Parameter","name":"uniform","type":{"kind":"TypeReference","typeName":"Uniform"}}],"type":{"kind":"VoidKeyword"}}]},"GfxTexture":{"kind":"InterfaceDeclaration","name":"GfxTexture","members":[{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"bind","parameters":[],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"unbind","parameters":[],"type":{"kind":"VoidKeyword"}}]},"GfxTexData":{"kind":"TypeAliasDeclaration","name":"GfxTexData","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"HTMLImageElement"},{"kind":"TypeReference","typeName":"HTMLCanvasElement"},{"kind":"TypeReference","typeName":"ImageData"},{"kind":"TypeReference","typeName":"ImageBitmap"}]}},"GfxFont":{"kind":"InterfaceDeclaration","name":"GfxFont","members":[{"kind":"PropertySignature","name":"tex","type":{"kind":"TypeReference","typeName":"GfxTexture"}},{"kind":"PropertySignature","name":"map","type":{"kind":"TypeReference","typeName":"Record","typeArguments":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"Vec2"}]}},{"kind":"PropertySignature","name":"qw","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"The quad width of each character."}]},{"kind":"PropertySignature","name":"qh","type":{"kind":"NumberKeyword"}}]},"Vertex":{"kind":"InterfaceDeclaration","name":"Vertex","members":[{"kind":"PropertySignature","name":"pos","type":{"kind":"TypeReference","typeName":"Vec3"}},{"kind":"PropertySignature","name":"uv","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"PropertySignature","name":"color","type":{"kind":"TypeReference","typeName":"Color"}},{"kind":"PropertySignature","name":"opacity","type":{"kind":"NumberKeyword"}}]},"TexFilter":{"kind":"TypeAliasDeclaration","name":"TexFilter","type":{"kind":"UnionType","types":[{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"nearest","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"linear","hasExtendedUnicodeEscape":false}}]},"jsDoc":[{"kind":"JSDocComment","comment":"Texture scaling filter. \"nearest\" is mainly for sharp pixelated scaling, \"linear\" means linear interpolation."}]},"TexWrap":{"kind":"TypeAliasDeclaration","name":"TexWrap","type":{"kind":"UnionType","types":[{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"repeat","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"clampToEdge","hasExtendedUnicodeEscape":false}}]}},"GfxTexConf":{"kind":"InterfaceDeclaration","name":"GfxTexConf","members":[{"kind":"PropertySignature","name":"filter","type":{"kind":"TypeReference","typeName":"TexFilter"},"questionToken":true},{"kind":"PropertySignature","name":"wrap","type":{"kind":"TypeReference","typeName":"TexWrap"},"questionToken":true}]},"RenderProps":{"kind":"InterfaceDeclaration","name":"RenderProps","members":[{"kind":"PropertySignature","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"},"questionToken":true},{"kind":"PropertySignature","name":"scale","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Vec2"},{"kind":"NumberKeyword"}]},"questionToken":true},{"kind":"PropertySignature","name":"rot","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"color","type":{"kind":"TypeReference","typeName":"Color"},"questionToken":true},{"kind":"PropertySignature","name":"opacity","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"origin","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Origin"},{"kind":"TypeReference","typeName":"Vec2"}]},"questionToken":true},{"kind":"PropertySignature","name":"z","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"prog","type":{"kind":"TypeReference","typeName":"GfxProgram"},"questionToken":true},{"kind":"PropertySignature","name":"uniform","type":{"kind":"TypeReference","typeName":"Uniform"},"questionToken":true}]},"DrawQuadConf":{"kind":"TypeAliasDeclaration","name":"DrawQuadConf","type":{"kind":"IntersectionType","types":[{"kind":"TypeReference","typeName":"RenderProps"},{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"flipX","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"flipY","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"tex","type":{"kind":"TypeReference","typeName":"GfxTexture"},"questionToken":true},{"kind":"PropertySignature","name":"quad","type":{"kind":"TypeReference","typeName":"Quad"},"questionToken":true}]}]}},"DrawTextureConf":{"kind":"TypeAliasDeclaration","name":"DrawTextureConf","type":{"kind":"IntersectionType","types":[{"kind":"TypeReference","typeName":"RenderProps"},{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"flipX","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"flipY","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"tiled","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"quad","type":{"kind":"TypeReference","typeName":"Quad"},"questionToken":true}]}]}},"DrawRectStrokeConf":{"kind":"TypeAliasDeclaration","name":"DrawRectStrokeConf","type":{"kind":"IntersectionType","types":[{"kind":"TypeReference","typeName":"RenderProps"},{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true}]}]}},"DrawRectConf":{"kind":"TypeAliasDeclaration","name":"DrawRectConf","type":{"kind":"IntersectionType","types":[{"kind":"TypeReference","typeName":"RenderProps"},{"kind":"TypeLiteral","members":[]}]}},"DrawLineConf":{"kind":"TypeAliasDeclaration","name":"DrawLineConf","type":{"kind":"IntersectionType","types":[{"kind":"TypeReference","typeName":"RenderProps"},{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true}]}]}},"DrawTriConf":{"kind":"TypeAliasDeclaration","name":"DrawTriConf","type":{"kind":"IntersectionType","types":[{"kind":"TypeReference","typeName":"RenderProps"},{"kind":"TypeLiteral","members":[]}]}},"DrawTextConf":{"kind":"TypeAliasDeclaration","name":"DrawTextConf","type":{"kind":"IntersectionType","types":[{"kind":"TypeReference","typeName":"RenderProps"},{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"size","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true}]}]}},"FormattedChar":{"kind":"InterfaceDeclaration","name":"FormattedChar","members":[{"kind":"PropertySignature","name":"tex","type":{"kind":"TypeReference","typeName":"GfxTexture"}},{"kind":"PropertySignature","name":"quad","type":{"kind":"TypeReference","typeName":"Quad"}},{"kind":"PropertySignature","name":"ch","type":{"kind":"StringKeyword"}},{"kind":"PropertySignature","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"PropertySignature","name":"scale","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"PropertySignature","name":"color","type":{"kind":"TypeReference","typeName":"Color"}},{"kind":"PropertySignature","name":"opacity","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"origin","type":{"kind":"StringKeyword"}}]},"FormattedText":{"kind":"InterfaceDeclaration","name":"FormattedText","members":[{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"chars","type":{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"FormattedChar"}}}]},"Cursor":{"kind":"TypeAliasDeclaration","name":"Cursor","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"auto","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"default","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"none","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"context-menu","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"help","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"pointer","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"progress","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"wait","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"cell","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"crosshair","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"text","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"vertical-text","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"alias","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"copy","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"move","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"no-drop","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"not-allowed","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"grab","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"grabbing","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"all-scroll","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"col-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"row-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"n-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"e-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"s-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"w-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"ne-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"nw-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"se-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"sw-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"ew-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"ns-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"nesw-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"nwse-resize","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"zoom-int","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"zoom-out","hasExtendedUnicodeEscape":false}}]}},"Origin":{"kind":"TypeAliasDeclaration","name":"Origin","type":{"kind":"UnionType","types":[{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"topleft","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"top","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"topright","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"left","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"center","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"right","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"botleft","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"bot","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"botright","hasExtendedUnicodeEscape":false}}]}},"DrawSpriteConf":{"kind":"TypeAliasDeclaration","name":"DrawSpriteConf","type":{"kind":"IntersectionType","types":[{"kind":"TypeReference","typeName":"RenderProps"},{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"frame","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"tiled","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"flipX","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"flipY","type":{"kind":"BooleanKeyword"},"questionToken":true},{"kind":"PropertySignature","name":"quad","type":{"kind":"TypeReference","typeName":"Quad"},"questionToken":true},{"kind":"PropertySignature","name":"prog","type":{"kind":"TypeReference","typeName":"ShaderData"},"questionToken":true},{"kind":"PropertySignature","name":"uniform","type":{"kind":"TypeReference","typeName":"Uniform"},"questionToken":true}]}]}},"Vec2":{"kind":"InterfaceDeclaration","name":"Vec2","members":[{"kind":"PropertySignature","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"y","type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"clone","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"add","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Returns the addition with another vector."}]},{"kind":"MethodSignature","name":"add","parameters":[{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"sub","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Returns the subtraction with another vector."}]},{"kind":"MethodSignature","name":"sub","parameters":[{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"scale","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Scale by another vector, or a single number."}]},{"kind":"MethodSignature","name":"scale","parameters":[{"kind":"Parameter","name":"s","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"scale","parameters":[{"kind":"Parameter","name":"sx","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"sy","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"dot","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the dot product with another vector."}]},{"kind":"MethodSignature","name":"dist","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get distance between another vector."}]},{"kind":"MethodSignature","name":"len","parameters":[],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"unit","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the unit vector (length of 1)."}]},{"kind":"MethodSignature","name":"normal","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the perpendicular vector."}]},{"kind":"MethodSignature","name":"angle","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the angle between another vector"}]},{"kind":"MethodSignature","name":"lerp","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"t","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Linear interpolate to a destination vector"}]},{"kind":"MethodSignature","name":"toFixed","parameters":[{"kind":"Parameter","name":"n","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"To n precision floating point."}]},{"kind":"MethodSignature","name":"eq","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"BooleanKeyword"}},{"kind":"MethodSignature","name":"str","parameters":[],"type":{"kind":"StringKeyword"}}]},"Vec3":{"kind":"InterfaceDeclaration","name":"Vec3","members":[{"kind":"PropertySignature","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"y","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"z","type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"xy","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"}}]},"Vec4":{"kind":"InterfaceDeclaration","name":"Vec4","members":[{"kind":"PropertySignature","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"y","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"z","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"w","type":{"kind":"NumberKeyword"}}]},"Mat4":{"kind":"InterfaceDeclaration","name":"Mat4","members":[{"kind":"PropertySignature","name":"m","type":{"kind":"ArrayType","elementType":{"kind":"NumberKeyword"}}},{"kind":"MethodSignature","name":"clone","parameters":[],"type":{"kind":"TypeReference","typeName":"Mat4"}},{"kind":"MethodSignature","name":"mult","parameters":[{"kind":"Parameter","name":"m","type":{"kind":"TypeReference","typeName":"Mat4"}}],"type":{"kind":"TypeReference","typeName":"Mat4"}},{"kind":"MethodSignature","name":"multVec4","parameters":[{"kind":"Parameter","name":"m","type":{"kind":"TypeReference","typeName":"Vec4"}}],"type":{"kind":"TypeReference","typeName":"Vec4"}},{"kind":"MethodSignature","name":"multVec3","parameters":[{"kind":"Parameter","name":"m","type":{"kind":"TypeReference","typeName":"Vec3"}}],"type":{"kind":"TypeReference","typeName":"Vec3"}},{"kind":"MethodSignature","name":"multVec2","parameters":[{"kind":"Parameter","name":"m","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"scale","parameters":[{"kind":"Parameter","name":"s","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Mat4"}},{"kind":"MethodSignature","name":"translate","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Mat4"}},{"kind":"MethodSignature","name":"rotateX","parameters":[{"kind":"Parameter","name":"a","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Mat4"}},{"kind":"MethodSignature","name":"rotateY","parameters":[{"kind":"Parameter","name":"a","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Mat4"}},{"kind":"MethodSignature","name":"rotateZ","parameters":[{"kind":"Parameter","name":"a","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Mat4"}},{"kind":"MethodSignature","name":"invert","parameters":[],"type":{"kind":"TypeReference","typeName":"Mat4"}}]},"Color":{"kind":"InterfaceDeclaration","name":"Color","members":[{"kind":"PropertySignature","name":"r","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Red (0-255)."}]},{"kind":"PropertySignature","name":"g","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Green (0-255)."}]},{"kind":"PropertySignature","name":"b","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Blue (0-255)."}]},{"kind":"MethodSignature","name":"clone","parameters":[],"type":{"kind":"TypeReference","typeName":"Color"}},{"kind":"MethodSignature","name":"lighten","parameters":[{"kind":"Parameter","name":"n","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Color"},"jsDoc":[{"kind":"JSDocComment","comment":"Lighten the color (adds RGB by n)."}]},{"kind":"MethodSignature","name":"darken","parameters":[{"kind":"Parameter","name":"n","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Color"},"jsDoc":[{"kind":"JSDocComment","comment":"Darkens the color (subtracts RGB by n)."}]},{"kind":"MethodSignature","name":"invert","parameters":[],"type":{"kind":"TypeReference","typeName":"Color"}},{"kind":"MethodSignature","name":"eq","parameters":[{"kind":"Parameter","name":"c","type":{"kind":"TypeReference","typeName":"Color"}}],"type":{"kind":"BooleanKeyword"}},{"kind":"MethodSignature","name":"str","parameters":[],"type":{"kind":"StringKeyword"}}],"jsDoc":[{"kind":"JSDocComment","comment":"0-255 RGBA color."}]},"Quad":{"kind":"InterfaceDeclaration","name":"Quad","members":[{"kind":"PropertySignature","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"y","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"w","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"h","type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"scale","parameters":[{"kind":"Parameter","name":"q","type":{"kind":"TypeReference","typeName":"Quad"}}],"type":{"kind":"TypeReference","typeName":"Quad"}},{"kind":"MethodSignature","name":"clone","parameters":[],"type":{"kind":"TypeReference","typeName":"Quad"}},{"kind":"MethodSignature","name":"eq","parameters":[{"kind":"Parameter","name":"q","type":{"kind":"TypeReference","typeName":"Quad"}}],"type":{"kind":"BooleanKeyword"}}]},"RNGValue":{"kind":"TypeAliasDeclaration","name":"RNGValue","type":{"kind":"UnionType","types":[{"kind":"NumberKeyword"},{"kind":"TypeReference","typeName":"Vec2"},{"kind":"TypeReference","typeName":"Color"}]}},"RNG":{"kind":"InterfaceDeclaration","name":"RNG","members":[{"kind":"PropertySignature","name":"seed","type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"gen","parameters":[],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"gen","typeParameters":[{"kind":"TypeParameter","name":"T","constraint":{"kind":"TypeReference","typeName":"RNGValue"}}],"parameters":[{"kind":"Parameter","name":"n","type":{"kind":"TypeReference","typeName":"T"}}],"type":{"kind":"TypeReference","typeName":"T"}},{"kind":"MethodSignature","name":"gen","typeParameters":[{"kind":"TypeParameter","name":"T","constraint":{"kind":"TypeReference","typeName":"RNGValue"}}],"parameters":[{"kind":"Parameter","name":"a","type":{"kind":"TypeReference","typeName":"T"}},{"kind":"Parameter","name":"b","type":{"kind":"TypeReference","typeName":"T"}}],"type":{"kind":"TypeReference","typeName":"T"}}]},"Rect":{"kind":"InterfaceDeclaration","name":"Rect","members":[{"kind":"PropertySignature","name":"p1","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"PropertySignature","name":"p2","type":{"kind":"TypeReference","typeName":"Vec2"}}]},"Line":{"kind":"InterfaceDeclaration","name":"Line","members":[{"kind":"PropertySignature","name":"p1","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"PropertySignature","name":"p2","type":{"kind":"TypeReference","typeName":"Vec2"}}]},"ClientID":{"kind":"TypeAliasDeclaration","name":"ClientID","type":{"kind":"NumberKeyword"}},"MsgHandler":{"kind":"TypeAliasDeclaration","name":"MsgHandler","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"id","type":{"kind":"TypeReference","typeName":"ClientID"}},{"kind":"Parameter","name":"data","type":{"kind":"AnyKeyword"}}],"type":{"kind":"VoidKeyword"}}},"Comp":{"kind":"InterfaceDeclaration","name":"Comp","members":[{"kind":"PropertySignature","name":"id","type":{"kind":"TypeReference","typeName":"Tag"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Component ID (if left out won't be treated as a comp)."}]},{"kind":"PropertySignature","name":"require","type":{"kind":"ArrayType","elementType":{"kind":"TypeReference","typeName":"Tag"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"What other comps this comp depends on."}]},{"kind":"PropertySignature","name":"add","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Event that runs when host game obj is added to scene."}]},{"kind":"PropertySignature","name":"load","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Event that runs when host game obj is added to scene and game is loaded."}]},{"kind":"PropertySignature","name":"update","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Event that runs every frame."}]},{"kind":"PropertySignature","name":"draw","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Event that runs every frame."}]},{"kind":"PropertySignature","name":"destroy","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Event that runs when obj is removed from scene."}]},{"kind":"PropertySignature","name":"inspect","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"StringKeyword"}},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Debug info for inspect mode."}]}]},"CharacterID":{"kind":"TypeAliasDeclaration","name":"CharacterID","type":{"kind":"NumberKeyword"}},"PosComp":{"kind":"InterfaceDeclaration","name":"PosComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Object's current world position."}]},{"kind":"MethodSignature","name":"move","parameters":[{"kind":"Parameter","name":"xVel","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"yVel","type":{"kind":"NumberKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Move how many pixels per second. If object is 'solid', it won't move into other 'solid' objects."}]},{"kind":"MethodSignature","name":"move","parameters":[{"kind":"Parameter","name":"vel","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"moveBy","parameters":[{"kind":"Parameter","name":"dx","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"dy","type":{"kind":"NumberKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Move how many pixels, without multiplying dt, but still checking for 'solid'."}]},{"kind":"MethodSignature","name":"moveBy","parameters":[{"kind":"Parameter","name":"d","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"moveTo","parameters":[{"kind":"Parameter","name":"dest","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"Parameter","name":"speed","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Move to a spot with a speed (pixels per second), teleports if speed is not given."}]},{"kind":"MethodSignature","name":"moveTo","parameters":[{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"speed","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"screenPos","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"},"jsDoc":[{"kind":"JSDocComment","comment":"Get position on screen after camera transform."}]}]},"ScaleComp":{"kind":"InterfaceDeclaration","name":"ScaleComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"scale","type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"scaleTo","parameters":[{"kind":"Parameter","name":"s","type":{"kind":"NumberKeyword"}}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"scaleTo","parameters":[{"kind":"Parameter","name":"s","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"VoidKeyword"}},{"kind":"MethodSignature","name":"scaleTo","parameters":[{"kind":"Parameter","name":"sx","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"sy","type":{"kind":"NumberKeyword"}}],"type":{"kind":"VoidKeyword"}}]},"RotateComp":{"kind":"InterfaceDeclaration","name":"RotateComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"angle","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Angle in degrees."}]}]},"ColorComp":{"kind":"InterfaceDeclaration","name":"ColorComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"color","type":{"kind":"TypeReference","typeName":"Color"}}]},"OpacityComp":{"kind":"InterfaceDeclaration","name":"OpacityComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"opacity","type":{"kind":"NumberKeyword"}}]},"OriginComp":{"kind":"InterfaceDeclaration","name":"OriginComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"origin","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Origin"},{"kind":"TypeReference","typeName":"Vec2"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Origin point for render."}]}]},"LayerComp":{"kind":"InterfaceDeclaration","name":"LayerComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"layer","type":{"kind":"StringKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Which layer this game obj belongs to."}]}]},"ZComp":{"kind":"InterfaceDeclaration","name":"ZComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"z","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Defines the z-index of this game obj"}]}]},"FollowComp":{"kind":"InterfaceDeclaration","name":"FollowComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"follow","type":{"kind":"TypeLiteral","members":[{"kind":"PropertySignature","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}},{"kind":"PropertySignature","name":"offset","type":{"kind":"TypeReference","typeName":"Vec2"}}]}}]},"MoveComp":{"kind":"InterfaceDeclaration","name":"MoveComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[]},"CleanupComp":{"kind":"InterfaceDeclaration","name":"CleanupComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[]},"RectSide":{"kind":"TypeAliasDeclaration","name":"RectSide","type":{"kind":"UnionType","types":[{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"top","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"bottom","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"left","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"right","hasExtendedUnicodeEscape":false}}]}},"AreaCompConf":{"kind":"InterfaceDeclaration","name":"AreaCompConf","members":[{"kind":"PropertySignature","name":"offset","type":{"kind":"TypeReference","typeName":"Vec2"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Width of area."}]},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Width of area."}]},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Height of area."}]},{"kind":"PropertySignature","name":"scale","type":{"kind":"UnionType","types":[{"kind":"NumberKeyword"},{"kind":"TypeReference","typeName":"Vec2"}]},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Area scale."}]},{"kind":"PropertySignature","name":"cursor","type":{"kind":"TypeReference","typeName":"Cursor"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Cursor on hover."}]}]},"AreaComp":{"kind":"InterfaceDeclaration","name":"AreaComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"area","type":{"kind":"TypeReference","typeName":"AreaCompConf"},"jsDoc":[{"kind":"JSDocComment","comment":"Collider area info."}]},{"kind":"MethodSignature","name":"areaWidth","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the width of collider area."}]},{"kind":"MethodSignature","name":"areaHeight","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the height of collider area."}]},{"kind":"MethodSignature","name":"isClicked","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If was just clicked on last frame."}]},{"kind":"MethodSignature","name":"isHovering","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If is being hovered on."}]},{"kind":"MethodSignature","name":"isColliding","parameters":[{"kind":"Parameter","name":"o","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If is currently colliding with another game obj."}]},{"kind":"MethodSignature","name":"isTouching","parameters":[{"kind":"Parameter","name":"o","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If is currently touching another game obj."}]},{"kind":"MethodSignature","name":"clicks","parameters":[{"kind":"Parameter","name":"f","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event runs when clicked."}]},{"kind":"MethodSignature","name":"hovers","parameters":[{"kind":"Parameter","name":"onHover","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}},{"kind":"Parameter","name":"onNotHover","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event runs when hovered."}]},{"kind":"MethodSignature","name":"collides","parameters":[{"kind":"Parameter","name":"tag","type":{"kind":"TypeReference","typeName":"Tag"}},{"kind":"Parameter","name":"f","type":{"kind":"FunctionType","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}},{"kind":"Parameter","name":"side","type":{"kind":"TypeReference","typeName":"RectSide"},"questionToken":true}],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Registers an event runs when collides with another game obj with certain tag."}]},{"kind":"MethodSignature","name":"hasPt","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If has a certain point inside collider."}]},{"kind":"MethodSignature","name":"pushOut","parameters":[{"kind":"Parameter","name":"obj","type":{"kind":"TypeReference","typeName":"Character"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Push out from another solid game obj if currently overlapping."}]},{"kind":"MethodSignature","name":"pushOutAll","parameters":[],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Push out from all other solid game objs if currently overlapping.","tags":[{"kind":"FirstJSDocTagNode","tagName":"example","comment":"```js\n// make player won't move through solid() objs\nplayer.action(() => {\n    player.pushOutAll();\n});\n```"}]}]},{"kind":"MethodSignature","name":"worldArea","parameters":[],"type":{"kind":"TypeReference","typeName":"Rect"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the geometry data for the collider in world coordinate space."}]},{"kind":"MethodSignature","name":"screenArea","parameters":[],"type":{"kind":"TypeReference","typeName":"Rect"},"jsDoc":[{"kind":"JSDocComment","comment":"Get the geometry data for the collider in screen coordinate space."}]}]},"SpriteCompConf":{"kind":"InterfaceDeclaration","name":"SpriteCompConf","members":[{"kind":"PropertySignature","name":"quad","type":{"kind":"TypeReference","typeName":"Quad"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Rectangular area to render."}]},{"kind":"PropertySignature","name":"frame","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Initial frame."}]},{"kind":"PropertySignature","name":"tiled","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If provided width and height, don't stretch but instead render tiled."}]},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Stretch sprite to a certain width."}]},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Stretch sprite to a certain height."}]},{"kind":"PropertySignature","name":"anim","type":{"kind":"StringKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Play an anim on start."}]},{"kind":"PropertySignature","name":"animSpeed","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Frame animation speed scale multiplier."}]},{"kind":"PropertySignature","name":"flipX","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Flip texture horizontally."}]},{"kind":"PropertySignature","name":"flipY","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Flip texture vertically."}]}]},"SpriteComp":{"kind":"InterfaceDeclaration","name":"SpriteComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Width for sprite."}]},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Height for sprite."}]},{"kind":"PropertySignature","name":"frame","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Current frame."}]},{"kind":"PropertySignature","name":"quad","type":{"kind":"TypeReference","typeName":"Quad"},"jsDoc":[{"kind":"JSDocComment","comment":"The rectangular area of the texture to render."}]},{"kind":"MethodSignature","name":"play","parameters":[{"kind":"Parameter","name":"anim","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"conf","type":{"kind":"TypeReference","typeName":"SpriteAnimPlayConf"},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Play a piece of anim."}]},{"kind":"MethodSignature","name":"stop","parameters":[],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Stop current anim."}]},{"kind":"MethodSignature","name":"numFrames","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get total number of frames."}]},{"kind":"MethodSignature","name":"curAnim","parameters":[],"type":{"kind":"StringKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Get current anim name."}]},{"kind":"PropertySignature","name":"animSpeed","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Frame animation speed scale multiplier."}]},{"kind":"MethodSignature","name":"flipX","parameters":[{"kind":"Parameter","name":"b","type":{"kind":"BooleanKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Flip texture horizontally."}]},{"kind":"MethodSignature","name":"flipY","parameters":[{"kind":"Parameter","name":"b","type":{"kind":"BooleanKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Flip texture vertically."}]}]},"TextComp":{"kind":"InterfaceDeclaration","name":"TextComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"text","type":{"kind":"StringKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"The text to render."}]},{"kind":"PropertySignature","name":"textSize","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"The text size."}]},{"kind":"PropertySignature","name":"font","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"FontData"}]},"jsDoc":[{"kind":"JSDocComment","comment":"The font to use."}]},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Width of text."}]},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Height of text."}]}]},"TextCompConf":{"kind":"InterfaceDeclaration","name":"TextCompConf","members":[{"kind":"PropertySignature","name":"size","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Height of text."}]},{"kind":"PropertySignature","name":"font","type":{"kind":"UnionType","types":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"FontData"}]},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"The font to use."}]},{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Wrap text to a certain width."}]}]},"RectComp":{"kind":"InterfaceDeclaration","name":"RectComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Width of rect."}]},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Height of height."}]}]},"AreaType":{"kind":"TypeAliasDeclaration","name":"AreaType","type":{"kind":"UnionType","types":[{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"rect","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"line","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"point","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"circle","hasExtendedUnicodeEscape":false}},{"kind":"LiteralType","literal":{"kind":"StringLiteral","text":"polygon","hasExtendedUnicodeEscape":false}}]}},"OutlineComp":{"kind":"InterfaceDeclaration","name":"OutlineComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"lineWidth","type":{"kind":"NumberKeyword"}},{"kind":"PropertySignature","name":"lineColor","type":{"kind":"TypeReference","typeName":"Color"}}]},"Debug":{"kind":"InterfaceDeclaration","name":"Debug","members":[{"kind":"PropertySignature","name":"paused","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Pause the whole game."}]},{"kind":"PropertySignature","name":"inspect","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Draw bounding boxes of all objects with `area()` component, hover to inspect their states."}]},{"kind":"PropertySignature","name":"timeScale","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Global time scale."}]},{"kind":"PropertySignature","name":"showLog","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Show the debug log or not."}]},{"kind":"MethodSignature","name":"fps","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Current frames per second."}]},{"kind":"MethodSignature","name":"objCount","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Number of all existing game objects."}]},{"kind":"MethodSignature","name":"drawCalls","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Number of draw calls made last frame."}]},{"kind":"MethodSignature","name":"stepFrame","parameters":[],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Step to the next frame. Useful with pausing."}]},{"kind":"MethodSignature","name":"clearLog","parameters":[],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Clear the debug log."}]},{"kind":"MethodSignature","name":"log","parameters":[{"kind":"Parameter","name":"msg","type":{"kind":"StringKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Log some text to on screen debug log."}]},{"kind":"MethodSignature","name":"error","parameters":[{"kind":"Parameter","name":"msg","type":{"kind":"StringKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Log an error message to on screen debug log."}]}]},"UniformValue":{"kind":"TypeAliasDeclaration","name":"UniformValue","type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Vec2"},{"kind":"TypeReference","typeName":"Vec3"},{"kind":"TypeReference","typeName":"Color"},{"kind":"TypeReference","typeName":"Mat4"}]}},"Uniform":{"kind":"TypeAliasDeclaration","name":"Uniform","type":{"kind":"TypeReference","typeName":"Record","typeArguments":[{"kind":"StringKeyword"},{"kind":"TypeReference","typeName":"UniformValue"}]}},"ShaderComp":{"kind":"InterfaceDeclaration","name":"ShaderComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"uniform","type":{"kind":"TypeReference","typeName":"Uniform"}},{"kind":"PropertySignature","name":"shader","type":{"kind":"StringKeyword"}}]},"BodyComp":{"kind":"InterfaceDeclaration","name":"BodyComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"solid","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If should collide with other solid objects."}]},{"kind":"PropertySignature","name":"jumpForce","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Initial speed in pixels per second for jump()."}]},{"kind":"PropertySignature","name":"weight","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Gravity multiplier."}]},{"kind":"MethodSignature","name":"curPlatform","parameters":[],"type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"Character"},{"kind":"LiteralType","literal":{"kind":"NullKeyword"}}]},"jsDoc":[{"kind":"JSDocComment","comment":"Current platform landing on."}]},{"kind":"MethodSignature","name":"grounded","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If currently landing on a platform."}]},{"kind":"MethodSignature","name":"falling","parameters":[],"type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If currently falling."}]},{"kind":"MethodSignature","name":"jump","parameters":[{"kind":"Parameter","name":"force","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Upward thrust."}]},{"kind":"MethodSignature","name":"djump","parameters":[{"kind":"Parameter","name":"f","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Performs double jump (the initial jump only happens if player is grounded)."}]}]},"BodyCompConf":{"kind":"InterfaceDeclaration","name":"BodyCompConf","members":[{"kind":"PropertySignature","name":"jumpForce","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Initial speed in pixels per second for jump()."}]},{"kind":"PropertySignature","name":"maxVel","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Maximum velocity when falling."}]},{"kind":"PropertySignature","name":"weight","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Gravity multiplier."}]},{"kind":"PropertySignature","name":"solid","type":{"kind":"BooleanKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"If should not move through other solid objects."}]}]},"Timer":{"kind":"InterfaceDeclaration","name":"Timer","members":[{"kind":"PropertySignature","name":"time","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Timer left."}]},{"kind":"MethodSignature","name":"action","parameters":[],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"The action to take after time is up."}]}]},"TimerComp":{"kind":"InterfaceDeclaration","name":"TimerComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"MethodSignature","name":"wait","parameters":[{"kind":"Parameter","name":"n","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"cb","type":{"kind":"FunctionType","parameters":[],"type":{"kind":"VoidKeyword"}}}],"type":{"kind":"TypeReference","typeName":"EventCanceller"},"jsDoc":[{"kind":"JSDocComment","comment":"Run the callback after n seconds."}]}]},"SolidComp":{"kind":"InterfaceDeclaration","name":"SolidComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"solid","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If should stop other solid objects from moving through."}]}]},"FixedComp":{"kind":"InterfaceDeclaration","name":"FixedComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"fixed","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If the obj is unaffected by camera"}]}]},"StayComp":{"kind":"InterfaceDeclaration","name":"StayComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"PropertySignature","name":"stay","type":{"kind":"BooleanKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"If the obj should not be destroyed on scene switch."}]}]},"HealthComp":{"kind":"InterfaceDeclaration","name":"HealthComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[{"kind":"MethodSignature","name":"hurt","parameters":[{"kind":"Parameter","name":"n","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Decrease HP by n (defaults to 1)."}]},{"kind":"MethodSignature","name":"heal","parameters":[{"kind":"Parameter","name":"n","type":{"kind":"NumberKeyword"},"questionToken":true}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Increase HP by n (defaults to 1)."}]},{"kind":"MethodSignature","name":"hp","parameters":[],"type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Current health points."}]},{"kind":"MethodSignature","name":"setHP","parameters":[{"kind":"Parameter","name":"hp","type":{"kind":"NumberKeyword"}}],"type":{"kind":"VoidKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Set current health points."}]}]},"LifespanComp":{"kind":"InterfaceDeclaration","name":"LifespanComp","heritageClauses":[{"kind":"HeritageClause","token":94,"types":[{"kind":"ExpressionWithTypeArguments","expression":{"kind":"Identifier","escapedText":"Comp"}}]}],"members":[]},"LifespanCompConf":{"kind":"InterfaceDeclaration","name":"LifespanCompConf","members":[{"kind":"PropertySignature","name":"fade","type":{"kind":"NumberKeyword"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Fade out duration (default 0 which is no fade out)."}]}]},"LevelConf":{"kind":"InterfaceDeclaration","name":"LevelConf","members":[{"kind":"PropertySignature","name":"width","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Grid width (width of each block)."}]},{"kind":"PropertySignature","name":"height","type":{"kind":"NumberKeyword"},"jsDoc":[{"kind":"JSDocComment","comment":"Grid height (height of each block)."}]},{"kind":"PropertySignature","name":"pos","type":{"kind":"TypeReference","typeName":"Vec2"},"questionToken":true,"jsDoc":[{"kind":"JSDocComment","comment":"Position of the first block."}]},{"kind":"MethodSignature","name":"any","parameters":[{"kind":"Parameter","name":"s","type":{"kind":"StringKeyword"}}],"type":{"kind":"UnionType","types":[{"kind":"TypeReference","typeName":"CompList","typeArguments":[{"kind":"AnyKeyword"}]},{"kind":"UndefinedKeyword"}]},"jsDoc":[{"kind":"JSDocComment","comment":"Called when encountered an undefined symbol."}]},{"kind":"IndexSignature","parameters":[{"kind":"Parameter","name":"sym","type":{"kind":"StringKeyword"}}],"type":{"kind":"AnyKeyword"}}]},"Level":{"kind":"InterfaceDeclaration","name":"Level","members":[{"kind":"MethodSignature","name":"getPos","parameters":[{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"getPos","parameters":[{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"spawn","parameters":[{"kind":"Parameter","name":"sym","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"p","type":{"kind":"TypeReference","typeName":"Vec2"}}],"type":{"kind":"TypeReference","typeName":"Character"}},{"kind":"MethodSignature","name":"spawn","parameters":[{"kind":"Parameter","name":"sym","type":{"kind":"StringKeyword"}},{"kind":"Parameter","name":"x","type":{"kind":"NumberKeyword"}},{"kind":"Parameter","name":"y","type":{"kind":"NumberKeyword"}}],"type":{"kind":"TypeReference","typeName":"Character"}},{"kind":"MethodSignature","name":"width","parameters":[],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"height","parameters":[],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"gridWidth","parameters":[],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"gridHeight","parameters":[],"type":{"kind":"NumberKeyword"}},{"kind":"MethodSignature","name":"offset","parameters":[],"type":{"kind":"TypeReference","typeName":"Vec2"}},{"kind":"MethodSignature","name":"destroy","parameters":[]}]}}